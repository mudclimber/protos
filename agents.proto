syntax = "proto3";

option go_package = "hub_protos_agents";

package hub_protos.agents;


message TcpConnection {
  string host = 1;
  uint32 port = 2;
}

message RpcConnection {
  string host = 1;
  uint32 port = 2;
}

message Agent {
  oneof connection {
    TcpConnection tcp = 1;
    RpcConnection rpc = 2;
  }
  string display_name = 3;
}

message NewAgentRequest {
  Agent agent = 1;
}

message NewAgentResponse {
  enum AgentState {
    ACK = 0;
    ALREADY_EXISTS = 1;
    CONNECTION_ISSUE = 2;
  }
  AgentState agent_state = 1;
  uint64 next_keepalive_deadline = 2;
  bytes guid = 3;
}

message PingRequest {
  bool disconnect = 1;
  bytes guid = 2;
}

message PingResponse {
  uint64 next_keepalive_deadline = 1;
}

service AgentComms {
  rpc NewAgent (NewAgentRequest) returns (NewAgentResponse);
  rpc PingAgent (PingRequest) returns (PingResponse);
}

message Login {
  string login = 1;
  uint32 columns = 2;
  uint32 rows = 3;
}

message Read {
  bytes buf = 1;
}

message Resize {
  uint32 columns = 1;
  uint32 rows = 2;
}

message Disconnect { }

message AgentStreamRequest {
  oneof frame {
    Login login = 1;
    Read read = 2;
    Resize resize = 3;
    Disconnect disconnect = 4;
  }
}

message Write {
  bytes buf = 1;
}

message AgentStreamResponse {
  Write write = 1;
}

service AgentStreams {
  rpc AgentStream (stream AgentStreamRequest) returns (stream AgentStreamResponse);
}
